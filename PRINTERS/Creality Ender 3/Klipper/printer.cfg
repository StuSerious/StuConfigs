#<---------------------------- Section: Printer ------------------------------->
[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1450FF1325813AAF20D66B5CC12000F5-if00

#>>>>> USED FOR [adxl345]
#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 500
max_z_velocity: 10
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: P1.19
sclk_pin: P1.21
sid_pin: P1.23
encoder_pins: ^P1.20, ^P1.18
click_pin: !P0.28

[output_pin beeper]
pin: EXP1_1

#<------------------------------ Section: Drivers ------------------------------>
[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
endstop_pin: P1.29
position_endstop: 0
position_max: 235
homing_speed: 50
second_homing_speed: 1
[tmc2208 stepper_x]
uart_pin: P1.10
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 250

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
endstop_pin: P1.28
position_endstop: 0
position_max: 235
homing_speed: 50
second_homing_speed: 1
[tmc2208 stepper_y]
uart_pin: P1.9
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 250

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 8
endstop_pin: P1.27
position_endstop: 0.0
position_max: 300
homing_speed: 20
second_homing_speed: 1
[tmc2208 stepper_z]
uart_pin: P1.8
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 30

#<------------------------------ Section: Too Hot ----------------------------->
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 260
[tmc2208 extruder]
uart_pin: P1.4
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 5

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: P2.3

[heater_fan nozzle_fan]
pin: P2.4
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

#>>>>> ENABLE RPI TEMP MONITORING
[temperature_sensor raspberryPi]
sensor_type: temperature_host

#>>>>> ENABLE MCU TEMP MONITORING
#[temperature_sensor MCU]
#sensor_type: temperature_mcu
#sensor_mcu: mcu

#>>>>> ENABLE RUNOUT SENSING
#[filament_switch_sensor runout_sensor]
#Move filament runout sensor from TFT to X+ endstop pin.
#pause_on_runout: False
#runout_gcode: PAUSE
#insert_gcode: RESUME
#switch_pin: ar2

#<--------------------------- Section: Compensation --------------------------->
#>>>>> MANUAL RESONANCE COMPENSATION
#[input_shaper]
#shaper_freq_x: 34.23
#shaper_freq_y: 38.99
#shaper_type: mzv
#shaper_type_x:
#shaper_type_y:
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1

#>>>>> ACCELEROMETER CONFIGURATION
#[adxl345]
#cs_pin: rpi:None

#>>>>> ENABLE AUTO CALIBRATION
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#100,100,20  # an example

#<--------------------------- Section: Levelling ------------------------------>
#>>>>> PROBE CONFIGURATION
#[bltouch]
#sensor_pin: 
#control_pin: 

#>>>>> ENABLE BED_SCREWS_ADJUST
[bed_screws]
screw1: 55,55
screw1_name: Front-Left
screw2: 255,55
screw2_name: Front-Right
screw3: 55,255
screw3_name: Back-Left
screw4: 255,255
screw4_name: Back-Right
speed: 100.0

#>>>>> ENABLE G35
[screws_tilt_adjust]
screw1: 50,15
screw1_name: Front left screw
screw2: 50,235
screw2_name: Rear left screw
screw3: 245,15
screw3_name: Front right screw
screw4: 245,235
screw4_name: Rear right screw
horizontal_move_z: 10
speed: 250
screw_thread: CW-M3

#<---------------------------- Section: Features ------------------------------>
#>>>>> MOONRAKER REQUISITE
[display_status]

#>>>>> ENABLE M118
[respond]

#>>>>> GCODE PATH IN THE PI
[virtual_sdcard]
path: ~/gcode_files

#>>>>> RETURN VELOCITY
[pause_resume]
recover_velocity: 20

#[save_variables]
#filename: ~/variables.cfg

#>>>>> ARC SUPPORT
[gcode_arcs]
resolution: 0.025

#<----------------------------- Section: Macros ------------------------------->
#>>>>> START GCODE
[gcode_macro THE_BEGINNING]
gcode:

#>>>>> FILAMENT LOAD PROCEDURE
[gcode_macro LOAD_FILAMENT]
default_parameter_EXTRUDER: 200
default_parameter_X: 410
default_parameter_Y: 40
default_parameter_Z: 10
default_parameter_E: 160
gcode:
    G90
    G0 X{X} Y{Y}                #move to area where you can easily load filament
    M109 S{EXTRUDER}            #set hotend temperature and wait
    M83                         #relative positioning on extruder    
    G0 E{E} F400                #prime extruder
    G92 E0

#>>>>> PAUSE PRINTING
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 0    #edit to your park position
default_parameter_Y: 0    #edit to your park position
default_parameter_Z: 10     #edit to your park position
default_parameter_E: 1      #edit to your retract length
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

#>>>>> RESUME PRINTING
[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1      #edit to your retract length
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

#>>>>> FILAMENT CHANGE
[gcode_macro M600]
default_parameter_X: 410        #park position
default_parameter_Y: 40         #park position
default_parameter_Z: 10         #park position
default_parameter_E: -130       #retract distance
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-5 F4000
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000          #park position
    G0 E10 F500                 #extrude filament to get better blob on end
    G0 E{E} F600                #retract additional filament to move out of melt zone
    G92 E0

#>>>>> RESUME PRINTING
[gcode_macro SWAP_RESUME]
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    resume

#>>>>> STOP PRINTING IMMEDIATELY
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#>>>>> END GCODE
[gcode_macro THE_END]
gcode:
    TURN_OFF_HEATERS                #turn off heaters... 
    SAVE_GCODE_STATE NAME=END_state
    M83                             #set relative extrusion
    G92 E0                          #reset extrusion amount
    M204 S10000                     #set max acceleration
    G1 E-2 F4000                    #retract 2mm
    M204 S3000                      #set max acceleration

    #move the toolhead out of the way
    #if the tool is less than 30mm away from Z Max, move it to Z max, otherwise, move Z up 30mm

    {% if printer.toolhead.position.z|float + 30 >= printer.configfile.config["stepper_z"]["position_max"]|float %}
    G90                         #set absolute extrusion
    G1 Z{printer.configfile.config["stepper_z"]["position_max"]|float} F1000 #Move tool
    {% else %}
    G91                         #set relative extrusion
    G1 Z30 F1000                #move Z axis up 30mm
    {% endif %}

    RESTORE_GCODE_STATE NAME=END_state
    G1 X0 Y200 F24000           #park tool at back of printer
    M107                
    #UNLOAD_FILAMENT            #this is a good spot to call an unload 
                                #filament macro, if you are into that sort of thing
    SET_GCODE_OFFSET Z=0        #reset whatever babystepping you have done
    M84                         #disable motors
    CLEAR_PAUSE                 #clear whatever PAUSE state you may have if you have it

#>>>>> FILAMENT RESPOOL PROCEDURE
[gcode_macro UNLOAD_FILAMENT]
default_parameter_EXTRUDER: 200
default_parameter_X: 300
default_parameter_Y: 40
default_parameter_Z: 10
default_parameter_E: -160
gcode:
    G0 X{X} Y{Y}                #move to area where you can easily load filament
    M109 S{EXTRUDER}            #set hotend temperature and wait    
    M83                         #relative positioning on extruder
    G0 E15 F400                 #extrude filament to get better blob on end
    G0 E{E} F1000               #retract additional filament to move out of melt zone
    G92 E0

#>>>>> SHUT DOWN ALL STEPPERS
[gcode_macro ENGINES_OFF]
gcode:
    M18

#>>>>> BED LEVELLING 
[gcode_macro G29]
gcode:
    BED_MESH_CLEAR              #clear any loaded mesh
    G28                         #auto-home
    BED_MESH_CALIBRATE          #run probing
    BED_MESH_PROFILE SAVE=e3    #save the mesh

#>>>>> Z STEPPERS AUTO-ALIGNMENT
[gcode_macro G34]
gcode:
    G28
    Z_TILT_ADJUST

#>>>>> TRAMMING ASSISTANT
[gcode_macro G35]
gcode:
    G28
    SCREWS_TILT_CALCULATE

#>>>>> PROBE ACCURACY TEST
[gcode_macro M48]
gcode:
    G28
    G0 Z5
    G0 X155 Y155
    G0 Z0
    PROBE_ACCURACY

#>>>>> DEPLOY PROBE
[gcode_macro M401]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_down

#>>>>> STOW PROBE
[gcode_macro M402]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_up

#>>>>> CALLS THE BED LEVELLING PROCEDURE
[gcode_macro BED_LEVEL]
gcode:
  BED_SCREWS_ADJUST

#>>>>> TERMINAL INTERACTION: ACCEPT
[gcode_macro YES]
gcode:
  ACCEPT

#>>>>> TERMINAL INTERACTION: ADJUST
[gcode_macro NO]
gcode:
  ADJUST

#>>>>> TERMINAL INTERACTION: ABORT
[gcode_macro HELLNO]
gcode:
  ABORT

#<----------------------------- Section: Aliases ------------------------------->
[board_pins]
mcu: mcu
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

#<------------------------------ Section: Menu -------------------------------->
[menu __main]
type: list
name: Main

### menu tune ###
[menu __main __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Tune

[menu __main __tune __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

[menu __main __tune __flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}

[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1


### menu octoprint ###
[menu __main __octoprint]
type: list
name: OctoPrint

[menu __main __octoprint __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
    {action_respond_info('action:pause')}

[menu __main __octoprint __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
    {action_respond_info('action:resume')}

[menu __main __octoprint __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
    {action_respond_info('action:cancel')}

### menu virtual sdcard ###
[menu __main __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: SD Card

[menu __main __sdcard __start]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "standby" or printer.print_stats.state == "error" or printer.print_stats.state == "complete")}
name: Start printing
gcode: M24

[menu __main __sdcard __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "pause"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

[menu __main __sdcard __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

[menu __main __sdcard __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "pause")}
name: Cancel printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}

### menu control ###
[menu __main __control]
type: list
name: Control

[menu __main __control __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home All
gcode: G28

[menu __main __control __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Z
gcode: G28 Z

[menu __main __control __homexy]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X/Y
gcode: G28 X Y

[menu __main __control __disable]
type: command
name: Steppers off
gcode:
    M84
    M18

[menu __main __control __fanonoff]
type: input
enable: {'fan' in printer}
name: Fan: {'ON ' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

### menu move 10mm ###
[menu __main __control __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 10mm

[menu __main __control __move_10mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 1mm ###
[menu __main __control __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 1mm

[menu __main __control __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 0.1mm ###
[menu __main __control __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 0.1mm

[menu __main __control __move_01mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu temperature ###
[menu __main __temp]
type: list
name: Temperature

[menu __main __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __main __temp __hotend1_target]
type: input
enable: {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name: {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.configfile.config.extruder1.max_temp}
input_step: 1
gcode: M104 T1 S{'%.0f' % menu.input}

[menu __main __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
gcode: M140 S{'%.0f' % menu.input}

[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA

[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S60
    M104 S200

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S200

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S60

[menu __main __temp __preheat_abs]
type: list
name: Preheat ABS

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S110
    M104 S245

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S245

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S110

[menu __main __temp __cooldown]
type: list
name: Cooldown

[menu __main __temp __cooldown __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Cooldown all
gcode:
    M104 S0
    M140 S0

[menu __main __temp __cooldown __hotend]
type: command
enable: {'extruder' in printer}
name: Cooldown hotend
gcode: M104 S0

[menu __main __temp __cooldown __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Cooldown hotbed
gcode: M140 S0

### menu filament ###

[menu __main __filament]
type: list
name: Filament

[menu __main __filament __hotend0_target]
type: input
enable: {'extruder' in printer}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __main __filament __loadf]
type: command
name: Load Fil. fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __loads]
type: command
name: Load Fil. slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloadf]
type: command
name: Unload Fil.fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloads]
type: command
name: Unload Fil.slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __feed]
type: input
name: Feed: {'%.1f' % menu.input}
input: 5
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F60
    RESTORE_GCODE_STATE NAME=__filament__load

### menu setup ###
[menu __main __setup]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Setup

[menu __main __setup __save_config]
type: command
name: Save config
gcode: SAVE_CONFIG

[menu __main __setup __restart]
type: list
name: Restart

[menu __main __setup __restart __host_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart host
gcode: RESTART

[menu __main __setup __restart __firmware_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart FW
gcode: FIRMWARE_RESTART

[menu __main __setup __tuning]
type: list
name: PID tuning

[menu __main __setup __tuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __main __setup __calib]
type: list
name: Calibration

[menu __main __setup __calib __delta_calib_auto]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Delta cal. auto
gcode:
    G28
    DELTA_CALIBRATE

[menu __main __setup __calib __delta_calib_man]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Delta cal. man

[menu __main __setup __calib __bedprobe]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed probe
gcode: PROBE

[menu __main __setup __calib __delta_calib_man __start]
type: command
name: Start probing
gcode:
    G28
    DELTA_CALIBRATE METHOD=manual

[menu __main __setup __calib __delta_calib_man __move_z]
type: input
name: Move Z: {'%03.2f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_step: 1
realtime: True
gcode:
    {%- if menu.event == 'change' -%}
        G1 Z{'%.2f' % menu.input}
    {%- elif menu.event == 'long_click' -%}
        G1 Z{'%.2f' % menu.input}
        SAVE_GCODE_STATE NAME=__move__axis
        G91
        G1 Z2
        G1 Z-2
        RESTORE_GCODE_STATE NAME=__move__axis
    {%- endif -%}

[menu __main __setup __calib __delta_calib_man __test_z]
type: input
name: Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input: 6
input_min: 0
input_max: 11
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
    {%- endif -%}

[menu __main __setup __calib __delta_calib_man __accept]
type: command
name: Accept
gcode: ACCEPT

[menu __main __setup __calib __delta_calib_man __abort]
type: command
name: Abort
gcode: ABORT

[menu __main __setup __dump]
type: command
name: Dump parameters
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

[menu __main __octoprint]
type: disabled

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.759
#*# pid_ki = 1.533
#*# pid_kd = 108.188
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.330
#*# pid_ki = 1.859
#*# pid_kd = 627.785
